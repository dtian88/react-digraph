// @flow

/*
  Example config for GraphView component
*/
import * as React from 'react';

export const NODE_KEY = 'id'; // Key used to identify nodes

// These keys are arbitrary (but must match the config)
// However, GraphView renders text differently for empty types
// so this has to be passed in if that behavior is desired.
export const EMPTY_TYPE = 'customEmpty'; // Empty node type
export const POLY_TYPE = 'poly';
export const SPECIAL_TYPE = 'special';
export const SKINNY_TYPE = 'skinny';
export const SPECIAL_CHILD_SUBTYPE = 'specialChild';
export const EMPTY_EDGE_TYPE = 'emptyEdge';
export const SPECIAL_EDGE_TYPE = 'specialEdge';
export const COMPLEX_CIRCLE_TYPE = 'complexCircle';
export const COMPUTER_TYPE = 'computer';
export const FILE_TYPE = 'file';
export const USER_TYPE = 'user';
export const DATABASE_TYPE = 'database';
export const HASH_TYPE = 'hash';

export const nodeTypes = [
  EMPTY_TYPE,
  POLY_TYPE,
  SPECIAL_TYPE,
  SKINNY_TYPE,
  COMPUTER_TYPE,
  FILE_TYPE,
  USER_TYPE,
  DATABASE_TYPE,
  HASH_TYPE,
];
export const edgeTypes = [EMPTY_EDGE_TYPE, SPECIAL_EDGE_TYPE];

const EmptyNodeShape = (
  <symbol viewBox="0 0 154 154" width="154" height="154" id="emptyNode">
    <circle cx="77" cy="77" r="76" />
  </symbol>
);

const CustomEmptyShape = (
  <symbol viewBox="0 0 100 100" id="customEmpty">
    <circle cx="50" cy="50" r="45" />
  </symbol>
);

const SpecialShape = (
  <symbol viewBox="-27 0 154 154" id="special" width="154" height="154">
    <rect transform="translate(50) rotate(45)" width="109" height="109" />
  </symbol>
);

const PolyShape = (
  <symbol viewBox="0 0 88 72" id="poly" width="88" height="88">
    <path d="M 0 36 18 0 70 0 88 36 70 72 18 72Z" />
  </symbol>
);

const ComplexCircleShape = (
  <symbol viewBox="0 0 100 100" id="complexCircle" width="100" height="100">
    <circle cx="50" cy="50" r="50" fill="transparent" stroke="transparent" />
    <circle cx="50" cy="50" r="34" />
    <path
      d="M50,0a50,50,0,1,0,50,50A50,50,0,0,0,50,0Zm0,90A40,40,0,1,1,90,50,40,40,0,0,1,50,90Z"
      data-intersect-ignore="true"
    />
  </symbol>
);

const SkinnyShape = (
  <symbol viewBox="0 0 154 54" width="154" height="54" id="skinny">
    <rect x="0" y="0" rx="2" ry="2" width="154" height="54" />
  </symbol>
);

const ComputerShape = (
  // <symbol viewBox="-0.5 26 196 143" id="computer" width="196" height="143">
  //   <rect
  //     x="-0.5"
  //     y="26"
  //     rx="5"
  //     ry="5"
  //     width="196"
  //     height="143"
  //     fill="transparent"
  //     stroke="transparent"
  //   />
  //   <path d="M183.198 65.7554 146.185 65.7554 146.185 60.0388 183.198 60.0388 183.198 65.7554ZM183.198 69.4834 146.185 69.4834 146.185 75.2114 183.198 75.2114 183.198 69.4834ZM183.176 43.5518 146.219 43.5518 146.219 56.1465 183.176 56.1465 183.176 43.5518ZM195 30.0109 195 165.006C194.994 167.029 193.346 168.677 191.317 168.677L138.077 168.677C136.043 168.677 134.4 167.029 134.4 165L134.4 30.0109C134.4 27.9826 136.043 26.3282 138.077 26.3282L191.317 26.3282C193.351 26.3282 195 27.9826 195 30.0109ZM187.64 33.6766 141.749 33.6766 141.749 161.323 187.64 161.323 187.64 33.6766ZM183.198 78.9337 146.185 78.9337 146.185 84.6447 183.198 84.6447 183.198 78.9337ZM177.176 121.528C177.176 128.111 171.856 133.42 165.295 133.42 158.723 133.42 153.403 128.106 153.403 121.528 153.403 114.967 158.729 109.641 165.295 109.641 171.856 109.641 177.176 114.973 177.176 121.528ZM172.887 121.528C172.887 117.341 169.488 113.93 165.289 113.93 161.085 113.93 157.686 117.335 157.686 121.528 157.686 125.721 161.085 129.12 165.289 129.12 169.488 129.12 172.887 125.721 172.887 121.528ZM124.287 52.2259 124.287 128.74C124.287 133.352 120.576 137.086 116.01 137.086L74.6731 137.086C74.6731 137.086 72.3276 153.788 87.2055 153.788L87.2055 162.145 74.6731 162.145 49.6197 162.145 37.0873 162.145 37.0873 153.799C51.4157 153.799 49.6197 137.097 49.6197 137.097L8.30016 137.097C3.71666 137.097 0 133.363 0 128.752L0 52.2259C0 47.614 3.71666 43.8974 8.30016 43.8974L116.004 43.8974C120.576 43.8974 124.287 47.614 124.287 52.2259ZM69.8687 126.876C69.8687 122.922 66.6619 119.721 62.7073 119.721 58.747 119.721 55.5346 122.922 55.5346 126.876 55.5346 130.831 58.7414 134.043 62.7073 134.043 66.6676 134.043 69.8687 130.831 69.8687 126.876ZM115.415 52.7528 8.88372 52.7528 8.88372 117.267 115.409 117.267 115.415 117.267C115.415 117.267 115.415 52.7528 115.415 52.7528ZM62.781 122.395C60.3221 122.395 58.3334 124.389 58.3334 126.842 58.3334 129.296 60.3277 131.29 62.781 131.29 65.2342 131.29 67.2285 129.296 67.2285 126.842 67.2285 124.389 65.2398 122.395 62.781 122.395Z" />
  // </symbol>
  <symbol
    viewBox="-0.5 18.83 144.2 105.5"
    id="computer"
    width="144.2"
    height="105.5"
  >
    <rect
      x="-0.5"
      y="18.83"
      rx="3.5"
      ry="3.5"
      width="144.2"
      height="105.5"
      fill="transparent"
      stroke="transparent"
    />
    <path
      d="M143.265 22.0488 143.265 121.229C143.261 122.715 142.05 123.926 140.559 123.926L101.444 123.926C99.95 123.926 98.7429 122.715 98.7429 121.224L98.7429 22.0488C98.7429 20.5586 99.95 19.3432 101.444 19.3432L140.559 19.3432C142.054 19.3432 143.265 20.5586 143.265 22.0488Z
            M137.858 24.742 104.142 24.742 104.142 118.523 137.858 118.523 137.858 24.742Z
            M134.594 57.9921 107.401 57.9921 107.401 62.1879 134.594 62.1879 134.594 57.9921Z
            M130.17 89.2859C130.17 94.1224 126.262 98.0229 121.441 98.0229 116.613 98.0229 112.704 94.1187 112.704 89.2859 112.704 84.4656 116.617 80.5526 121.441 80.5526 126.262 80.5526 130.17 84.47 130.17 89.2859Z
            M127.019 89.2859C127.019 86.2097 124.522 83.7037 121.437 83.7037 118.348 83.7037 115.851 86.2053 115.851 89.2859 115.851 92.3664 118.348 94.8637 121.437 94.8637 124.522 94.8637 127.019 92.3664 127.019 89.2859Z
            M91.3129 38.37 91.3129 94.5845C91.3129 97.9729 88.5864 100.716 85.2318 100.716L54.8619 100.716C54.8619 100.716 53.1386 112.987 64.0693 112.987L64.0693 119.127 54.8619 119.127 36.4553 119.127 27.2478 119.127 27.2478 112.995C37.7748 112.995 36.4553 100.724 36.4553 100.724L6.09808 100.724C2.73061 100.724 0 97.981 0 94.5933L0 38.37C0 34.9817 2.73061 32.2512 6.09808 32.2512L85.2274 32.2512C88.5864 32.2512 91.3129 34.9817 91.3129 38.37Z
            M51.3321 93.215C51.3321 90.31 48.9761 87.9583 46.0707 87.9583 43.1611 87.9583 40.8009 90.31 40.8009 93.215 40.8009 96.1207 43.1569 98.4806 46.0707 98.4806 48.9803 98.4806 51.3321 96.1207 51.3321 93.215Z
            M143.265 22.0488 143.265 121.229C143.261 122.715 142.05 123.926 140.559 123.926L101.444 123.926C99.95 123.926 98.7429 122.715 98.7429 121.224L98.7429 22.0488C98.7429 20.5586 99.95 19.3432 101.444 19.3432L140.559 19.3432C142.054 19.3432 143.265 20.5586 143.265 22.0488Z
            M51.3321 93.215C51.3321 90.31 48.9761 87.9583 46.0707 87.9583 43.1611 87.9583 40.8009 90.31 40.8009 93.215 40.8009 96.1207 43.1569 98.4806 46.0707 98.4806 48.9803 98.4806 51.3321 96.1207 51.3321 93.215Z"
    />
    <path
      d="M134.594 48.3101 107.401 48.3101 107.401 44.1101 134.594 44.1101 134.594 48.3101Z
            M134.594 51.049 107.401 51.049 107.401 55.2574 134.594 55.2574 134.594 51.049Z
            M134.578 31.9972 107.426 31.9972 107.426 41.2505 134.578 41.2505 134.578 31.9972Z
            M143.265 22.0488 143.265 121.229C143.261 122.715 142.05 123.926 140.559 123.926L101.444 123.926C99.95 123.926 98.7429 122.715 98.7429 121.224L98.7429 22.0488C98.7429 20.5586 99.95 19.3432 101.444 19.3432L140.559 19.3432C142.054 19.3432 143.265 20.5586 143.265 22.0488Z
            M137.858 24.742 104.142 24.742 104.142 118.523 137.858 118.523 137.858 24.742Z
            M134.594 57.9921 107.401 57.9921 107.401 62.1879 134.594 62.1879 134.594 57.9921Z
            M130.17 89.2859C130.17 94.1224 126.262 98.0229 121.441 98.0229 116.613 98.0229 112.704 94.1187 112.704 89.2859 112.704 84.4656 116.617 80.5526 121.441 80.5526 126.262 80.5526 130.17 84.47 130.17 89.2859Z
            M127.019 89.2859C127.019 86.2097 124.522 83.7037 121.437 83.7037 118.348 83.7037 115.851 86.2053 115.851 89.2859 115.851 92.3664 118.348 94.8637 121.437 94.8637 124.522 94.8637 127.019 92.3664 127.019 89.2859Z
            M91.3129 38.37 91.3129 94.5845C91.3129 97.9729 88.5864 100.716 85.2318 100.716L54.8619 100.716C54.8619 100.716 53.1386 112.987 64.0693 112.987L64.0693 119.127 54.8619 119.127 36.4553 119.127 27.2478 119.127 27.2478 112.995C37.7748 112.995 36.4553 100.724 36.4553 100.724L6.09808 100.724C2.73061 100.724 0 97.981 0 94.5933L0 38.37C0 34.9817 2.73061 32.2512 6.09808 32.2512L85.2274 32.2512C88.5864 32.2512 91.3129 34.9817 91.3129 38.37Z
            M51.3321 93.215C51.3321 90.31 48.9761 87.9583 46.0707 87.9583 43.1611 87.9583 40.8009 90.31 40.8009 93.215 40.8009 96.1207 43.1569 98.4806 46.0707 98.4806 48.9803 98.4806 51.3321 96.1207 51.3321 93.215Z
            M84.7947 38.7572 6.52681 38.7572 6.52681 86.1553 84.7903 86.1553 84.7947 86.1553C84.7947 86.1553 84.7947 38.7572 84.7947 38.7572Z
            M46.1248 89.9229C44.3183 89.9229 42.8572 91.3878 42.8572 93.19 42.8572 94.993 44.3224 96.458 46.1248 96.458 47.9272 96.458 49.3924 94.993 49.3924 93.19 49.3924 91.3878 47.9313 89.9229 46.1248 89.9229Z"
      fill="#000000"
      stroke="transparent"
    />
  </symbol>
);

const FileShape = (
  // <symbol viewBox="15 -0.49 102.8 133.6" id="file" width="102.8" height="133.6">
  //   <rect
  //     x="15"
  //     y="-0.49"
  //     width="102.8"
  //     height="133.6"
  //     fill="transparent"
  //     stroke="transparent"
  //   />
  //   <path d="M86.4935 0 15.4074 0 15.4074 133 117.593 133 117.593 31.3275 86.4935 0ZM88.073 9.27438 108.386 29.7361 88.073 29.7361 88.073 9.27438ZM20.8204 127.587 20.8204 5.41306 82.66 5.41306 82.66 35.1492 112.18 35.1492 112.18 127.587 20.8204 127.587 20.8204 127.587Z" />
  //   <path d="M31.1919 29.7361 75.173 29.7361 75.173 35.1492 31.1919 35.1492Z" />
  //   <path d="M31.1919 54.5355 101.809 54.5355 101.809 59.9486 31.1919 59.9486Z" />
  //   <path d="M31.1919 79.3349 101.809 79.3349 101.809 84.748 31.1919 84.748Z" />
  //   <path d="M31.1919 104.134 101.809 104.134 101.809 109.547 31.1919 109.547Z" />
  // </symbol>
  <symbol viewBox="11 -0.49 77 100" id="file" width="77" height="100">
    <rect
      x="11"
      y="-0.49"
      width="77"
      height="100"
      fill="transparent"
      stroke="transparent"
    />
    <path
      d="M64.3824 0 11.4686 0 11.4686 99 87.5316 99 87.5316 23.319 64.3824 0Z"
      fill="00FFFF"
    />
    <path
      d="M64.3824 0 11.4686 0 11.4686 99 87.5316 99 87.5316 23.319 64.3824 0Z
            M65.5581 6.90348 80.6781 22.1344 65.5581 22.1344 65.5581 6.90348Z
            M15.4979 94.9707 15.4979 4.02927 61.5289 4.02927 61.5289 26.1637 83.5023 26.1637 83.5023 94.9705 15.4979 94.9705 15.4979 94.9707Z
            M23.218 22.1344 55.9558 22.1344 55.9558 26.1637 23.218 26.1637Z
            M23.218 40.5941 75.7825 40.5941 75.7825 44.6234 23.218 44.6234Z
            M23.218 59.0538 75.7825 59.0538 75.7825 63.0831 23.218 63.0831Z
            M23.218 77.5132 75.7825 77.5132 75.7825 81.5425 23.218 81.5425Z"
      fill="#000000"
      stroke="transparent"
    />
  </symbol>
);

const UserShape = (
  <symbol viewBox="0 0 98 98" id="user" width="98" height="98">
    <circle cx="49" cy="49" r="48" />
    <path
      d="M49 97.02C22.5204 97.02 0.98 75.4796 0.98 49 0.98 22.5204 22.5204 0.98 49 0.98 75.4698 0.98 97.02 22.5204 97.02 49 97.02 75.4796 75.4796 97.02 49 97.02Z
        M49 5.0176C24.745 5.0176 5.0176 24.745 5.0176 49 5.0176 73.255 24.745 92.9824 49.0098 92.9824 73.2648 92.9824 92.9922 73.255 92.9922 49 92.9824 24.745 73.255 5.0176 49 5.0176Z
        M49 54.8212C38.269 54.8212 29.5372 46.0894 29.5372 35.3486 29.5372 24.6176 38.269 15.8858 49 15.8858 59.731 15.8858 68.4628 24.6176 68.4628 35.3486 68.4628 46.0894 59.731 54.8212 49 54.8212Z
        M49 19.9234C40.4936 19.9234 33.5748 26.8422 33.5748 35.3584 33.5748 43.8746 40.4936 50.7934 49 50.7934 57.5064 50.7934 64.435 43.8746 64.435 35.3584 64.4252 26.8422 57.5064 19.9234 49 19.9234Z
        M79.6446 85.3482C78.5274 85.3482 77.6258 84.4466 77.6258 83.3294 77.6258 67.6004 64.7878 54.8016 49 54.8016 33.222 54.8016 20.384 67.6004 20.384 83.3294 20.384 84.4466 19.4824 85.3482 18.3652 85.3482 17.248 85.3482 16.3464 84.4466 16.3464 83.3294 16.3464 65.3758 30.9974 50.764 49 50.764 67.0026 50.764 81.6634 65.3758 81.6634 83.3294 81.6536 84.4466 80.752 85.3482 79.6446 85.3482Z"
      fill="#000000"
      stroke="transparent"
      data-intersect-ignore="true"
    />
  </symbol>
);

const DatabaseShape = (
  <symbol viewBox="4.25 0 88.5 97" id="database" width="88.5" height="97">
    <rect
      x="4.25"
      y="0"
      width="88.5"
      height="97"
      fill="transparent"
      stroke="transparent"
    />
    <path
      d="M92.3334 15.0085C90.2911 7.44254 75.0903 0 48.5 0 21.9097 0 6.70711 7.44254 4.66658 15.0085 4.51844 15.2678 4.40909 15.5517 4.40909 15.8727L4.40909 16.7545 4.40909 37.0364 4.40909 37.9182 4.40909 38.8 4.40909 58.2 4.40909 59.0818 4.40909 59.9636 4.40909 81.1273C4.40909 81.413 4.48493 81.6828 4.61544 81.9227 6.69829 90.5557 25.3329 97 48.5 97 71.6142 97 90.2188 90.5821 92.3705 81.9809 92.5116 81.7287 92.5909 81.4377 92.5909 81.1273L92.5909 59.9636 92.5909 59.0818 92.5909 58.2 92.5909 38.8 92.5909 37.9182 92.5909 37.0364 92.5909 16.7545 92.5909 15.8727C92.5909 15.5517 92.4816 15.2678 92.3334 15.0085Z"
      stroke="transparent"
    />
    <path
      d="M92.3334 15.0085C90.2911 7.44254 75.0903 0 48.5 0 21.9097 0 6.70711 7.44254 4.66658 15.0085 4.51844 15.2678 4.40909 15.5517 4.40909 15.8727L4.40909 16.7545 4.40909 37.0364 4.40909 37.9182 4.40909 38.8 4.40909 58.2 4.40909 59.0818 4.40909 59.9636 4.40909 81.1273C4.40909 81.413 4.48493 81.6828 4.61544 81.9227 6.69829 90.5557 25.3329 97 48.5 97 71.6142 97 90.2188 90.5821 92.3705 81.9809 92.5116 81.7287 92.5909 81.4377 92.5909 81.1273L92.5909 59.9636 92.5909 59.0818 92.5909 58.2 92.5909 38.8 92.5909 37.9182 92.5909 37.0364 92.5909 16.7545 92.5909 15.8727C92.5909 15.5517 92.4816 15.2678 92.3334 15.0085Z
    M88.9243 59.9372C88.8749 60.1506 88.8061 60.3622 88.7197 60.5774 88.6492 60.752 88.5628 60.9266 88.4675 61.1012 88.3494 61.3181 88.2171 61.535 88.0601 61.752 87.9437 61.916 87.8115 62.0782 87.6739 62.2405 87.4781 62.4715 87.27 62.7026 87.0337 62.9318 86.8908 63.0712 86.7339 63.2087 86.5751 63.3481 86.2859 63.6003 85.9843 63.8507 85.6475 64.0994 85.5029 64.2069 85.3477 64.311 85.1942 64.4168 84.7956 64.6919 84.3794 64.9653 83.9226 65.2334 83.8027 65.3057 83.674 65.3745 83.5487 65.445 83.0232 65.7413 82.4747 66.0358 81.8821 66.3215 81.8063 66.3586 81.7269 66.3939 81.6493 66.4291 80.9879 66.7413 80.2966 67.0482 79.5576 67.3445 79.5365 67.3533 79.5153 67.3603 79.4941 67.3691 75.4889 68.9688 70.3656 70.3144 64.3957 71.1962 64.3657 71.1998 64.3357 71.2033 64.3057 71.2086 63.1452 71.3797 61.9548 71.5313 60.7326 71.6654 60.5333 71.6865 60.3234 71.7006 60.1224 71.7218 59.0554 71.8329 57.976 71.9352 56.8649 72.0163 56.357 72.0534 55.8244 72.071 55.3076 72.1027 54.4717 72.1521 53.6445 72.2068 52.7874 72.2368 51.3871 72.2809 49.9585 72.3091 48.5 72.3091 47.0415 72.3091 45.6129 72.2809 44.2108 72.2315 43.3537 72.2015 42.5266 72.1451 41.6906 72.0975 41.1739 72.0675 40.6412 72.0481 40.1333 72.011 39.0222 71.9299 37.9429 71.8276 36.8759 71.7165 36.6748 71.6953 36.4649 71.6812 36.2657 71.6601 35.0435 71.526 33.853 71.3726 32.6925 71.2033 32.6625 71.1998 32.6326 71.1962 32.6026 71.1909 26.6327 70.3091 21.5093 68.9635 17.5041 67.3639 17.4829 67.3568 17.4618 67.348 17.4406 67.3392 16.7016 67.0429 16.0085 66.736 15.3489 66.4238 15.2731 66.3868 15.192 66.3515 15.1161 66.3163 14.5235 66.0305 13.9751 65.7378 13.4495 65.4397 13.326 65.3692 13.1955 65.3004 13.0756 65.2281 12.6188 64.96 12.2026 64.6867 11.804 64.4115 11.6523 64.3057 11.4954 64.2017 11.3508 64.0941 11.0139 63.8454 10.7123 63.595 10.4231 63.3428 10.2661 63.2052 10.1074 63.0676 9.96455 62.9265 9.72822 62.6973 9.52011 62.468 9.32435 62.2352 9.18678 62.0729 9.05451 61.9107 8.93811 61.7467 8.78291 61.5297 8.65064 61.3128 8.53071 61.0959 8.43547 60.9213 8.35082 60.7467 8.27851 60.5721 8.19209 60.3587 8.12331 60.1453 8.07393 59.9319 8.00867 59.6515 7.93636 59.3658 7.93636 59.0818 7.93636 58.8825 7.95929 58.6832 7.99104 58.4857 8.03513 58.2194 8.01044 57.9531 7.93636 57.7009L7.93636 44.6077C7.98574 44.6535 8.04747 44.6976 8.09862 44.7435 8.48309 45.0821 8.87462 45.4189 9.31553 45.7434 15.9591 50.768 29.2446 54.6727 48.5 54.6727 67.6743 54.6727 80.9262 50.7998 87.5981 45.8052 88.1307 45.4172 88.6104 45.0168 89.0619 44.6094L89.0636 44.6077 89.0636 57.7009C88.9896 57.9531 88.9649 58.2194 89.009 58.4857 89.0425 58.6832 89.0636 58.8825 89.0636 59.0818 89.0636 59.3658 88.9913 59.6515 88.9243 59.9372Z
    M89.0636 23.444 89.0636 36.5373C88.9896 36.7895 88.9649 37.0558 89.009 37.3221 89.0425 37.5196 89.0636 37.7189 89.0636 37.9182 89.0636 38.2021 88.9913 38.4878 88.9243 38.7735 88.8749 38.9869 88.8061 39.1986 88.7197 39.4137 88.6492 39.5883 88.5628 39.7629 88.4675 39.9375 88.3494 40.1545 88.2171 40.3714 88.0601 40.5883 87.9437 40.7523 87.8115 40.9146 87.6739 41.0769 87.4781 41.3079 87.27 41.5389 87.0337 41.7682 86.8908 41.9075 86.7339 42.0451 86.5751 42.1844 86.2859 42.4366 85.9843 42.6871 85.6475 42.9357 85.5029 43.0433 85.3477 43.1474 85.1942 43.2532 84.7956 43.5283 84.3794 43.8017 83.9226 44.0697 83.8027 44.1421 83.674 44.2108 83.5487 44.2814 83.0232 44.5777 82.4747 44.8722 81.8821 45.1579 81.8063 45.1949 81.7269 45.2302 81.6493 45.2655 80.9879 45.5777 80.2966 45.8845 79.5576 46.1808 79.5365 46.1896 79.5153 46.1967 79.4941 46.2055 75.4889 47.8051 70.3656 49.1508 64.3957 50.0326 64.3657 50.0361 64.3357 50.0397 64.3057 50.0449 63.1452 50.216 61.9548 50.3677 60.7326 50.5017 60.5333 50.5229 60.3234 50.537 60.1224 50.5582 59.0554 50.6693 57.976 50.7716 56.8649 50.8527 56.357 50.8897 55.8244 50.9074 55.3076 50.9391 54.4717 50.9885 53.6445 51.0432 52.7874 51.0731 51.3871 51.1172 49.9585 51.1455 48.5 51.1455 47.0415 51.1455 45.6129 51.1172 44.2108 51.0679 43.3537 51.0379 42.5266 50.9814 41.6906 50.9338 41.1739 50.9038 40.6412 50.8844 40.1333 50.8474 39.0222 50.7663 37.9429 50.664 36.8759 50.5529 36.6748 50.5317 36.4649 50.5176 36.2657 50.4964 35.0435 50.3624 33.853 50.209 32.6925 50.0397 32.6625 50.0361 32.6326 50.0326 32.6026 50.0273 26.6327 49.1455 21.5093 47.7998 17.5041 46.2002 17.4829 46.1932 17.4618 46.1843 17.4406 46.1755 16.7016 45.8792 16.0085 45.5724 15.3489 45.2602 15.2731 45.2232 15.192 45.1879 15.1161 45.1526 14.5235 44.8669 13.9751 44.5741 13.4495 44.2761 13.326 44.2055 13.1955 44.1368 13.0756 44.0645 12.6188 43.7964 12.2026 43.523 11.804 43.2479 11.6523 43.1421 11.4954 43.038 11.3508 42.9304 11.0139 42.6818 10.7123 42.4313 10.4231 42.1791 10.2661 42.0416 10.1074 41.904 9.96455 41.7629 9.72822 41.5336 9.52011 41.3044 9.32435 41.0716 9.18678 40.9093 9.05451 40.7471 8.93811 40.583 8.78291 40.3661 8.65064 40.1492 8.53071 39.9323 8.43547 39.7577 8.35082 39.5831 8.27851 39.4085 8.19209 39.1951 8.12331 38.9817 8.07393 38.7683 8.00867 38.4878 7.93636 38.2021 7.93636 37.9182 7.93636 37.7189 7.95929 37.5196 7.99104 37.3221 8.03513 37.0558 8.01044 36.7895 7.93636 36.5373L7.93636 23.444C8.148 23.6363 8.38962 23.825 8.61889 24.0154 8.74587 24.1213 8.86404 24.2271 8.99807 24.3329 9.52716 24.7491 10.0986 25.16 10.7176 25.5604 10.8464 25.6433 10.991 25.7244 11.125 25.8073 11.6435 26.13 12.192 26.4457 12.7687 26.7561 12.9821 26.8708 13.1955 26.9836 13.416 27.0965 14.0597 27.4245 14.7352 27.7438 15.4459 28.0524 15.5623 28.1035 15.6681 28.1565 15.7863 28.2058 16.6135 28.5568 17.4917 28.8919 18.4053 29.2164 18.6575 29.3063 18.9221 29.391 19.1813 29.4792 19.9079 29.7243 20.6592 29.9589 21.437 30.1864 21.7174 30.2675 21.9925 30.3522 22.28 30.4298 23.3117 30.7155 24.377 30.9871 25.4951 31.2375 25.6486 31.2728 25.8143 31.301 25.9695 31.3345 26.9554 31.5497 27.9783 31.749 29.0295 31.9359 29.3857 31.9994 29.7473 32.0594 30.1106 32.1193 31.1105 32.2834 32.1405 32.4333 33.1969 32.5708 33.4685 32.6061 33.7278 32.6467 34.0029 32.6802 35.3151 32.8389 36.6731 32.9747 38.0681 33.0911 38.412 33.1193 38.77 33.1405 39.1192 33.1652 40.2356 33.2463 41.3767 33.3133 42.5442 33.3662 42.9692 33.3856 43.3925 33.405 43.8264 33.4209 45.3466 33.4721 46.8951 33.5091 48.5 33.5091 50.1049 33.5091 51.6534 33.4721 53.1736 33.4209 53.6057 33.405 54.029 33.3856 54.4558 33.3662 55.6233 33.3133 56.7644 33.2463 57.8808 33.1652 58.23 33.1387 58.5862 33.1193 58.9319 33.0911 60.3269 32.9765 61.6849 32.8389 62.9971 32.6802 63.2722 32.6467 63.5315 32.6061 63.8031 32.5708 64.8595 32.4333 65.8877 32.2834 66.8894 32.1193 67.2527 32.0594 67.6143 31.9994 67.9705 31.9359 69.0217 31.749 70.0446 31.5497 71.0305 31.3345 71.1857 31.301 71.3514 31.271 71.5049 31.2375 72.623 30.9871 73.6883 30.7137 74.72 30.4298 75.0075 30.3504 75.2826 30.2675 75.563 30.1864 76.3408 29.9589 77.0921 29.7243 77.8187 29.4792 78.0779 29.391 78.3425 29.3063 78.5947 29.2164 79.5083 28.8919 80.3883 28.5568 81.2137 28.2058 81.3319 28.1565 81.4377 28.1035 81.5541 28.0524 82.2648 27.742 82.9403 27.4245 83.584 27.0965 83.8045 26.9836 84.0196 26.8708 84.2313 26.7561 84.808 26.4475 85.3565 26.1318 85.875 25.8073 86.009 25.7244 86.1536 25.6433 86.2824 25.5604 86.9014 25.16 87.4728 24.7509 88.0019 24.3329 88.1342 24.2271 88.2524 24.1213 88.3811 24.0154 88.6104 23.825 88.852 23.6363 89.0636 23.444Z
    M48.5 3.52727C72.4061 3.52727 89.0636 10.4972 89.0636 16.7545 89.0636 23.0119 72.4061 29.9818 48.5 29.9818 24.5939 29.9818 7.93636 23.0119 7.93636 16.7545 7.93636 10.4972 24.5939 3.52727 48.5 3.52727Z
    M89.0636 80.6035C89.0389 80.6811 89.0213 80.7604 89.0072 80.8416 88.0072 86.942 71.4908 93.4727 48.5 93.4727 25.5092 93.4727 8.99278 86.942 7.9928 80.8416 7.97869 80.7622 7.95929 80.6846 7.93636 80.6105L7.93636 65.7713C7.98574 65.8171 8.04747 65.8612 8.09862 65.9071 8.48309 66.2457 8.87462 66.5826 9.31553 66.9071 15.9591 71.9317 29.2446 75.8364 48.5 75.8364 67.6743 75.8364 80.9262 71.9634 87.5981 66.9688 88.1307 66.5808 88.6104 66.1805 89.0619 65.773L89.0636 65.7713 89.0636 80.6035Z"
      fill="#000000"
      stroke="transparent"
    />
  </symbol>
);

const HashShape = (
  <symbol viewBox="0 0 77.598 80.834" id="hash" width="77.598" height="80.834">
    {/* <rect x="9.2" y="8" width="78.7" height="81.15" transform="translate(-9.2,-8)"/> */}
    <path d="M0 80.834 8.08 0 77.598 0 69.518 80.834Z" stroke="transparent" />
    <path
      d="M32.332 24.2503 48.499 24.2503 50.924 0.00033 59.0073 0.00033 56.5823 24.2503 75.174 24.2503 74.3657 32.3337 55.774 32.3337 54.1573 48.5003 71.1324 48.5003 70.324 56.5837 53.349 56.5837 50.924 80.8337 42.8407 80.8337 45.2657 56.5837 29.099 56.5837 26.674 80.8337 18.5907 80.8337 21.0157 56.5837 2.424 56.5837 3.2323 48.5003 21.824 48.5003 23.4407 32.3337 6.4657 32.3337 7.274 24.2503 24.249 24.2503 26.674 0.00033 34.7573 0.00033Z"
      stroke="transparent"
      data-intersect-ignore="true"
    />
    <path
      d="M31.524 32.3337 29.9073 48.5003 46.074 48.5003 47.6907 32.3337 31.524 32.3337Z"
      stroke="transparent"
      data-intersect-ignore="true"
    />
    <path
      d="M31.524 32.3337 29.9073 48.5003 46.074 48.5003 47.6907 32.3337 31.524 32.3337Z
            M32.332 24.2503 48.499 24.2503 50.924 0.00033 59.0073 0.00033 56.5823 24.2503 75.174 24.2503 74.3657 32.3337 55.774 32.3337 54.1573 48.5003 71.1324 48.5003 70.324 56.5837 53.349 56.5837 50.924 80.8337 42.8407 80.8337 45.2657 56.5837 29.099 56.5837 26.674 80.8337 18.5907 80.8337 21.0157 56.5837 2.424 56.5837 3.2323 48.5003 21.824 48.5003 23.4407 32.3337 6.4657 32.3337 7.274 24.2503 24.249 24.2503 26.674 0.00033 34.7573 0.00033Z"
      fill="#000000"
      stroke="transparent"
      data-intersect-ignore="true"
    />
  </symbol>
);

const SpecialChildShape = (
  <symbol viewBox="0 0 154 154" id="specialChild">
    <rect
      x="2.5"
      y="0"
      width="154"
      height="154"
      fill="rgba(30, 144, 255, 0.12)"
    />
  </symbol>
);

const EmptyEdgeShape = (
  <symbol viewBox="0 0 50 50" id="emptyEdge">
    <circle cx="25" cy="25" r="8" fill="currentColor" />
  </symbol>
);

const SpecialEdgeShape = (
  <symbol viewBox="0 0 50 50" id="specialEdge">
    <rect
      transform="rotate(45)"
      x="27.5"
      y="-7.5"
      width="15"
      height="15"
      fill="currentColor"
    />
  </symbol>
);

export default {
  EdgeTypes: {
    emptyEdge: {
      shape: EmptyEdgeShape,
      shapeId: '#emptyEdge',
    },
    specialEdge: {
      shape: SpecialEdgeShape,
      shapeId: '#specialEdge',
    },
  },
  NodeSubtypes: {
    specialChild: {
      shape: SpecialChildShape,
      shapeId: '#specialChild',
    },
  },
  NodeTypes: {
    emptyNode: {
      shape: EmptyNodeShape,
      shapeId: '#emptyNode',
      typeText: 'None',
    },
    empty: {
      shape: CustomEmptyShape,
      shapeId: '#empty',
      typeText: 'None',
    },
    special: {
      shape: SpecialShape,
      shapeId: '#special',
      typeText: 'Special',
    },
    skinny: {
      shape: SkinnyShape,
      shapeId: '#skinny',
      typeText: 'Skinny',
    },
    computer: {
      shape: ComputerShape,
      shapeId: '#computer',
      // typeText: 'Computer',
    },
    file: {
      shape: FileShape,
      shapeId: '#file',
      // typeText: 'File',
    },
    user: {
      shape: UserShape,
      shapeId: '#user',
      // typeText: 'User',
    },
    database: {
      shape: DatabaseShape,
      shapeId: '#database',
      // typeText: 'Database',
    },
    hash: {
      shape: HashShape,
      shapeId: '#hash',
      // typeText: 'Hash',
    },
    poly: {
      shape: PolyShape,
      shapeId: '#poly',
      typeText: 'Poly',
    },
    complexCircle: {
      shape: ComplexCircleShape,
      shapeId: '#complexCircle',
      typeText: 'complexCircle',
    },
  },
};
